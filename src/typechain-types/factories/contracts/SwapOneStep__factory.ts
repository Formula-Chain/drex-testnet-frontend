/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SwapOneStep,
  SwapOneStepInterface,
} from "../../contracts/SwapOneStep";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RealDigital",
        name: "_CBDC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "senderNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiverNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "CBDC",
    outputs: [
      {
        internalType: "contract RealDigital",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract RealTokenizado",
        name: "tokenSender",
        type: "address",
      },
      {
        internalType: "contract RealTokenizado",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161083638038061083683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6107a3806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636012856e1461003b5780637b00b68714610050575b600080fd5b61004e610049366004610696565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60405163f16dfbe960e01b81523360048201526001600160a01b0385169063f16dfbe990602401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e791906106e7565b6101465760405162461bcd60e51b815260206004820152602560248201527f537761704f6e65537465703a2053656e646572206973206e6f7420617574686f6044820152641c9a5e995960da1b60648201526084015b60405180910390fd5b60405163f16dfbe960e01b81526001600160a01b03838116600483015284169063f16dfbe990602401602060405180830381865afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906106e7565b61020c5760405162461bcd60e51b815260206004820152602760248201527f537761704f6e65537465703a205265636569766572206973206e6f74206175746044820152661a1bdc9a5e995960ca1b606482015260840161013d565b60405163be91de5360e01b815233600482015281906001600160a01b0386169063be91de5390602401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610710565b6040516370a0823160e01b81523360048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610710565b6102e89190610729565b101561034f5760405162461bcd60e51b815260206004820152603060248201527f537761704f6e65537465703a2053656e64657220646f6573206e6f742068617660448201526f6520656e6f7567682062616c616e636560801b606482015260840161013d565b60405163079cc67960e41b8152336004820152602481018290526001600160a01b038516906379cc679090604401600060405180830381600087803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b5050505060008054906101000a90046001600160a01b03166001600160a01b031663bb35783b856001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561040f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104339190610750565b856001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610750565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401600060405180830381600087803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b50506040516340c10f1960e01b81526001600160a01b03858116600483015260248201859052861692506340c10f199150604401600060405180830381600087803b15801561054657600080fd5b505af115801561055a573d6000803e3d6000fd5b505050507f3155b4536e4ae4b109dd4a9a4a81692cd1a0870195da68d6e2a94c5eb1fbf37e846001600160a01b031663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190610710565b846001600160a01b031663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610710565b60408051928352602083019190915233908201526001600160a01b03841660608201526080810183905260a00160405180910390a150505050565b6001600160a01b038116811461069357600080fd5b50565b600080600080608085870312156106ac57600080fd5b84356106b78161067e565b935060208501356106c78161067e565b925060408501356106d78161067e565b9396929550929360600135925050565b6000602082840312156106f957600080fd5b8151801515811461070957600080fd5b9392505050565b60006020828403121561072257600080fd5b5051919050565b8181038181111561074a57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561076257600080fd5b81516107098161067e56fea2646970667358221220ac395375e2caa88511277c0d85792aa9daabd797d9dcbfbdb10a53f4d2f47e3d64736f6c63430008130033";

type SwapOneStepConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapOneStepConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapOneStep__factory extends ContractFactory {
  constructor(...args: SwapOneStepConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _CBDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapOneStep> {
    return super.deploy(_CBDC, overrides || {}) as Promise<SwapOneStep>;
  }
  override getDeployTransaction(
    _CBDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_CBDC, overrides || {});
  }
  override attach(address: string): SwapOneStep {
    return super.attach(address) as SwapOneStep;
  }
  override connect(signer: Signer): SwapOneStep__factory {
    return super.connect(signer) as SwapOneStep__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapOneStepInterface {
    return new utils.Interface(_abi) as SwapOneStepInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapOneStep {
    return new Contract(address, _abi, signerOrProvider) as SwapOneStep;
  }
}
