/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SwapTwoSteps,
  SwapTwoStepsInterface,
} from "../../contracts/SwapTwoSteps";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RealDigital",
        name: "_CBDC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ExpiredProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "SwapCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "senderNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiverNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "senderNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiverNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SwapStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract RealTokenizado",
        name: "tokenSender",
        type: "address",
      },
      {
        internalType: "contract RealTokenizado",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "startSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapProposals",
    outputs: [
      {
        internalType: "contract RealTokenizado",
        name: "tokenSender",
        type: "address",
      },
      {
        internalType: "contract RealTokenizado",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum SwapTwoSteps.SwapStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052603c608052600060025534801561001a57600080fd5b5060405161163b38038061163b8339810160408190526100399161005e565b600080546001600160a01b0319166001600160a01b039290921691909117905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6080516115846100b76000396000818161069501528181610c380152610d7701526115846000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063262d442b14610051578063264c6f3314610066578063a9ab232b146100e4578063c61e4a20146100f7575b600080fd5b61006461005f366004611135565b61010a565b005b6100c8610074366004611186565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006909501546001600160a01b0396871696948516959385169490921692909160ff9091169087565b6040516100db97969594939291906111b5565b60405180910390f35b6100646100f2366004611186565b610497565b61006461010536600461122d565b610c02565b60405163f16dfbe960e01b81523360048201526001600160a01b0385169063f16dfbe990602401602060405180830381865afa15801561014e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017291906112e8565b6101975760405162461bcd60e51b815260040161018e90611311565b60405180910390fd5b60405163f16dfbe960e01b81526001600160a01b03838116600483015284169063f16dfbe990602401602060405180830381865afa1580156101dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020191906112e8565b61021d5760405162461bcd60e51b815260040161018e90611357565b610228843383610e11565b6040518060e00160405280856001600160a01b03168152602001846001600160a01b03168152602001336001600160a01b03168152602001836001600160a01b03168152602001828152602001600060028111156102885761028861119f565b8152426020909101526002805460019160009190826102a6836113b5565b9091555081526020808201929092526040908101600020835181546001600160a01b03199081166001600160a01b039283161783559385015160018084018054871692841692909217909155928501516002808401805487169284169290921790915560608601516003840180549096169216919091179093556080840151600482015560a084015160058201805492949193909260ff19169184908111156103515761035161119f565b021790555060c082015181600601559050507f0e3b28e08e3c06a6dd5d0a8de286fc19039cf2420012f001be1fa1174e44dec6600160025461039391906113ce565b856001600160a01b031663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906113e7565b856001600160a01b031663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045791906113e7565b604080519384526020840192909252908201523360608201526001600160a01b038416608082015260a0810183905260c00160405180910390a150505050565b60025481106104b85760405162461bcd60e51b815260040161018e90611400565b600081815260016020526040902060038101546001600160a01b0316331461053e5760405162461bcd60e51b815260206004820152603360248201527f5377617054776f53746570733a204f6e6c792074686520726563656976657220604482015272063616e2061636365707420746865207377617606c1b606482015260840161018e565b6000600582015460ff1660028111156105595761055961119f565b146105765760405162461bcd60e51b815260040161018e90611445565b8054600282015460405163f16dfbe960e01b81526001600160a01b03918216600482015291169063f16dfbe990602401602060405180830381865afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e791906112e8565b6106035760405162461bcd60e51b815260040161018e90611311565b6001810154600382015460405163f16dfbe960e01b81526001600160a01b03918216600482015291169063f16dfbe990602401602060405180830381865afa158015610653573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067791906112e8565b6106935760405162461bcd60e51b815260040161018e90611357565b7f00000000000000000000000000000000000000000000000000000000000000008160060154426106c491906113ce565b11156107125760405162461bcd60e51b815260206004820152601e60248201527f5377617054776f53746570733a2050726f706f73616c20657870697265640000604482015260640161018e565b805460028201546004830154610735926001600160a01b0390811692169061105b565b6004818101548254600284015460405163be91de5360e01b81526001600160a01b0391821694810194909452919291169063be91de5390602401602060405180830381865afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b091906113e7565b825460028401546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082191906113e7565b61082b91906113ce565b10156108495760405162461bcd60e51b815260040161018e9061148a565b8054600282015460048084015460405163079cc67960e41b81526001600160a01b039384169281019290925260248201529116906379cc679090604401600060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b505060005483546040805163669949ef60e11b815290516001600160a01b03938416955063bb35783b9450919092169163cd3293de9160048083019260209291908290030181865afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093291906114db565b8360010160009054906101000a90046001600160a01b03166001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab91906114db565b84600401546040518463ffffffff1660e01b81526004016109ed939291906001600160a01b039384168152919092166020820152604081019190915260600190565b600060405180830381600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b50505050600181015460038201546004808401546040516340c10f1960e01b81526001600160a01b039384169281019290925260248201529116906340c10f1990604401600060405180830381600087803b158015610a7957600080fd5b505af1158015610a8d573d6000803e3d6000fd5b5050505060058101805460ff1916600117905542600682015580546040805160016257165560e01b0319815290517fdf576c99dbf8d7fe039799f3cf9a7b8d493fea9f4efd97c21d7c71180d6e99159285926001600160a01b039091169163ffa8e9ab916004808201926020929091908290030181865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a91906113e7565b8360010160009054906101000a90046001600160a01b03166001600160a01b031663ffa8e9ab6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb391906113e7565b600285015460038601546004870154604080519687526020870195909552938501929092526001600160a01b03908116606085015216608083015260a082015260c00160405180910390a15050565b6002548210610c235760405162461bcd60e51b815260040161018e90611400565b600082815260016020526040902060068101547f000000000000000000000000000000000000000000000000000000000000000090610c6290426113ce565b1180610c7a575060038101546001600160a01b031633145b80610c91575060028101546001600160a01b031633145b610d035760405162461bcd60e51b815260206004820152603d60248201527f5377617054776f53746570733a204f6e6c79207468652073656e646572206f7260448201527f2072656365697665722063616e2063616e63656c207468652073776170000000606482015260840161018e565b6000600582015460ff166002811115610d1e57610d1e61119f565b14610d3b5760405162461bcd60e51b815260040161018e90611445565b805460028201546004830154610d5e926001600160a01b0390811692169061105b565b60058101805460ff1916600217905542600682018190557f000000000000000000000000000000000000000000000000000000000000000090610da190806113ce565b1115610de0576040518381527fe11732b06f0a06822b82bafce3ae86084d37fa1d4b828882e7aa472fd8ee1f39906020015b60405180910390a1505050565b7f646da14d81571ab969d264eaf28be5b6cb2cb25db1306f921b9a0a35835b4eed8383604051610dd39291906114f8565b60405163be91de5360e01b81526001600160a01b03838116600483015282919085169063be91de5390602401602060405180830381865afa158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e91906113e7565b6040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa158015610ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee891906113e7565b610ef291906113ce565b1015610f105760405162461bcd60e51b815260040161018e9061148a565b604051631590c63560e11b81526001600160a01b03838116600483015260248201839052841690632b218c6a90604401600060405180830381600087803b158015610f5a57600080fd5b505af1158015610f6e573d6000803e3d6000fd5b5050505060008054906101000a90046001600160a01b03166001600160a01b0316632b218c6a846001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff691906114db565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b15801561103e57600080fd5b505af1158015611052573d6000803e3d6000fd5b50505050505050565b60405163b4a4ed3960e01b81526001600160a01b0383811660048301526024820183905284169063b4a4ed3990604401600060405180830381600087803b1580156110a557600080fd5b505af11580156110b9573d6000803e3d6000fd5b5050505060008054906101000a90046001600160a01b03166001600160a01b031663b4a4ed39846001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd2573d6000803e3d6000fd5b6001600160a01b038116811461113257600080fd5b50565b6000806000806080858703121561114b57600080fd5b84356111568161111d565b935060208501356111668161111d565b925060408501356111768161111d565b9396929550929360600135925050565b60006020828403121561119857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03888116825287811660208301528681166040830152851660608201526080810184905260e081016003841061120257634e487b7160e01b600052602160045260246000fd5b60a082019390935260c0015295945050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561124057600080fd5b82359150602083013567ffffffffffffffff8082111561125f57600080fd5b818501915085601f83011261127357600080fd5b81358181111561128557611285611217565b604051601f8201601f19908116603f011681019083821181831017156112ad576112ad611217565b816040528281528860208487010111156112c657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156112fa57600080fd5b8151801515811461130a57600080fd5b9392505050565b60208082526026908201527f5377617054776f53746570733a2053656e646572206973206e6f7420617574686040820152651bdc9a5e995960d21b606082015260800190565b60208082526028908201527f5377617054776f53746570733a205265636569766572206973206e6f742061756040820152671d1a1bdc9a5e995960c21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016113c7576113c761139f565b5060010190565b818103818111156113e1576113e161139f565b92915050565b6000602082840312156113f957600080fd5b5051919050565b60208082526025908201527f5377617054776f53746570733a2050726f706f73616c20646f6573206e6f7420604082015264195e1a5cdd60da1b606082015260800190565b60208082526025908201527f5377617054776f53746570733a2050726f706f73616c20616c726561647920636040820152641b1bdcd95960da1b606082015260800190565b60208082526031908201527f5377617054776f53746570733a2053656e64657220646f6573206e6f74206861604082015270766520656e6f7567682062616c616e636560781b606082015260800190565b6000602082840312156114ed57600080fd5b815161130a8161111d565b82815260006020604081840152835180604085015260005b8181101561152c57858101830151858201606001528201611510565b506000606082860101526060601f19601f83011685010192505050939250505056fea2646970667358221220b384a69824a544cfbf6421708ea2d638114ab1e5b1e0224ccb2914d95f7c458064736f6c63430008130033";

type SwapTwoStepsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTwoStepsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapTwoSteps__factory extends ContractFactory {
  constructor(...args: SwapTwoStepsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _CBDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapTwoSteps> {
    return super.deploy(_CBDC, overrides || {}) as Promise<SwapTwoSteps>;
  }
  override getDeployTransaction(
    _CBDC: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_CBDC, overrides || {});
  }
  override attach(address: string): SwapTwoSteps {
    return super.attach(address) as SwapTwoSteps;
  }
  override connect(signer: Signer): SwapTwoSteps__factory {
    return super.connect(signer) as SwapTwoSteps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTwoStepsInterface {
    return new utils.Interface(_abi) as SwapTwoStepsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapTwoSteps {
    return new Contract(address, _abi, signerOrProvider) as SwapTwoSteps;
  }
}
